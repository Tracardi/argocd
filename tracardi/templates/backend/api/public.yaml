{{ if and .Values.secrets.dockerHub .Values.api.public.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: be-fa-public
  labels:
    {{- include "tracardi.labels" (dict "ctx" . "component" "be-fa-public") | nindent 4 }}
spec:
  serviceName: "tracardi-api-public"
  replicas: {{ .Values.api.public.replicas }}
  selector:
    matchLabels:
      {{- include "tracardi.selectorLabels" (dict "ctx" . "component" "be-fa-public") | nindent 6 }}
{{ if .Values.config.storage.failOver.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: fail-over-storage
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.config.storage.failOver.size }}
{{end}}
  template:
    metadata:
      labels:
        {{- include "tracardi.podLabels" (dict "ctx" . "component" "be-fa-public") | nindent 8 }}
    spec:
      {{ if .Values.api.public.spread }}
        {{range .Values.api.public.spread }}
          {{ toYaml . | nindent 6 }}
        {{ end }}
      {{ end }}
      imagePullSecrets:
        - name: {{ .Values.secrets.dockerHub | quote }}
      initContainers:
        - name: tracardi-init
          image: tracardi/init:{{ .Values.api.image.tag }}
          imagePullPolicy: Always
          env:
            {{- include "tracardi.env" (dict "ctx" .) | nindent 12 }}
            - name: LOGGING_LEVEL
              value: debug
      containers:
        - name: be-fa-public
          {{- include "tracardi.image" (dict "ctx" . "repo" .Values.api.image.repository "tag" .Values.api.image.tag "policy" .Values.api.image.pullPolicy) | nindent 10 }}
          resources:
            limits:
              memory: 250Mi
              cpu: 500m
            requests:
              memory: 100Mi
              cpu: 100m
          ports:
            - name: be-fa-p-port
              containerPort: 80
{{ if not .Values.config.multiTenant }}
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: 80
            initialDelaySeconds: 15
            periodSeconds: 60
{{ end }}
          env:
            {{- include "tracardi.env" (dict "ctx" .) | nindent 12 }}
            - name: EXPOSE_GUI_API
              value: "no"
            - name: PRODUCTION
              value: "yes"
            - name: LOGGING_LEVEL
              value: {{ .Values.api.public.config.loggingLevel | quote }}
            - name: SAVE_LOGS
              value: {{ .Values.api.public.config.saveLogs | quote }}
            - name: ENABLE_EVENT_DESTINATIONS
              value: {{ .Values.api.public.config.enableEventDestinations | quote }}
            - name: ENABLE_PROFILE_DESTINATIONS
              value: {{ .Values.api.public.config.enableProfileDestinations | quote }}
            - name: ENABLE_WORKFLOW
              value: {{ .Values.api.public.config.enableWorkflow | quote }}
            - name: ENABLE_IDENTIFICATION_POINT
              value: {{ .Values.api.public.config.enableIdentification | quote }}
            - name: ELASTIC_INDEX_SHARDS
              value: {{ .Values.elastic.index.shards | quote }}
            - name: ELASTIC_INDEX_REPLICAS
              value: {{ .Values.elastic.index.replicas | quote }}
            - name: MYSQL_DATABASE
              value: {{ .Values.mysql.database }}

{{ if .Values.config.storage.failOver.enabled }}
          volumeMounts:
            - name: fail-over-storage
              mountPath: "/opt/tracardi"
            - name: public-resources-cm
              mountPath: "/system/com_tracaardi/storage/preconfig/data/resources.json"
            - name: public-destinations-cm
              mountPath: "/system/com_tracaardi/storage/preconfig/data/destinations.json"
            - name: public-event-sources-cm
              mountPath: "/system/com_tracaardi/storage/preconfig/data/event-sources.json"
{{ end }}

{{ end }}