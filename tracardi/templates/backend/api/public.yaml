{{ if and .Values.secrets.dockerHub .Values.api.public.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: be-fa-public
  labels:
    {{- include "tracardi.labels" (dict "ctx" . "component" "be-fa-public") | nindent 4 }}
spec:
  replicas: {{ .Values.api.public.replicas }}
  selector:
    matchLabels:
      {{- include "tracardi.selectorLabels" (dict "ctx" . "component" "be-fa-public") | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "tracardi.podLabels" (dict "ctx" . "component" "be-fa-public") | nindent 8 }}
    spec:
      {{- include "chart.nodeAffinity" (dict "context" . "path" "api.public") | nindent 6 }}
      {{ if .Values.api.public.spread }}
        {{range .Values.api.public.spread }}
          {{ toYaml . | nindent 6 }}
        {{ end }}
      {{ end }}
      imagePullSecrets:
        - name: {{ .Values.secrets.dockerHub | quote }}
      initContainers:
        - name: tracardi-init
          image: tracardi/init:{{ .Values.api.image.tag }}
          imagePullPolicy: Always
          env:
            {{- include "tracardi.env" (dict "ctx" .) | nindent 12 }}
            - name: LOGGING_LEVEL
              value: debug
      containers:
        - name: be-fa-public
          {{- include "tracardi.image" (dict "ctx" . "repo" .Values.api.image.repository "tag" .Values.api.image.tag "policy" .Values.api.image.pullPolicy) | nindent 10 }}
          resources:
            limits:
              memory: {{ .Values.api.public.resources.limits.memory }}
              cpu: {{ .Values.api.public.resources.limits.cpu }}
            requests:
              memory: {{ .Values.api.public.resources.requests.memory }}
              cpu: {{ .Values.api.public.resources.requests.cpu }}
          ports:
            - name: be-fa-p-port
              containerPort: 80
          {{- include "tracardi.livenessProbe" . | nindent 10 }}
          env:
            {{- include "tracardi.env" (dict "ctx" .) | nindent 12 }}
            - name: EXPOSE_GUI_API
              value: {{ .Values.api.public.config.enableGuiApi | quote }}
            - name: PRODUCTION
              value: "yes"
            - name: LOGGING_LEVEL
              value: {{ .Values.api.public.config.loggingLevel | quote }}
            - name: SAVE_LOGS
              value: {{ .Values.api.public.config.saveLogs | quote }}
            - name: SERVER_LOGGING_LEVEL
              value: {{ .Values.api.public.config.serverLoggingLevel | quote }}
            - name: ELASTIC_LOGGING_LEVEL
              value: {{ .Values.api.public.config.elasticloggingLevel | quote }}

          volumeMounts:
            {{- include "tracardi.volumeMounts" (dict "ctx" .) | nindent 12 }}
      volumes:
        {{- include "tracardi.volumes" (dict "ctx" .) | nindent 8 }}

{{ end }}